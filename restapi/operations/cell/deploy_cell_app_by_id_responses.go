// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2016, 2017, 2018 Alexandre Biancalana <ale@biancalanas.net>.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the <organization> nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

package cell

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// DeployCellAppByIDOKCode is the HTTP code returned for type DeployCellAppByIDOK
const DeployCellAppByIDOKCode int = 200

/*DeployCellAppByIDOK successful operation

swagger:response deployCellAppByIdOK
*/
type DeployCellAppByIDOK struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewDeployCellAppByIDOK creates DeployCellAppByIDOK with default headers values
func NewDeployCellAppByIDOK() *DeployCellAppByIDOK {
	return &DeployCellAppByIDOK{}
}

// WithPayload adds the payload to the deploy cell app by Id o k response
func (o *DeployCellAppByIDOK) WithPayload(payload models.APIResponse) *DeployCellAppByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deploy cell app by Id o k response
func (o *DeployCellAppByIDOK) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeployCellAppByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// DeployCellAppByIDNoContentCode is the HTTP code returned for type DeployCellAppByIDNoContent
const DeployCellAppByIDNoContentCode int = 204

/*DeployCellAppByIDNoContent no content

swagger:response deployCellAppByIdNoContent
*/
type DeployCellAppByIDNoContent struct {
}

// NewDeployCellAppByIDNoContent creates DeployCellAppByIDNoContent with default headers values
func NewDeployCellAppByIDNoContent() *DeployCellAppByIDNoContent {
	return &DeployCellAppByIDNoContent{}
}

// WriteResponse to the client
func (o *DeployCellAppByIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeployCellAppByIDNotFoundCode is the HTTP code returned for type DeployCellAppByIDNotFound
const DeployCellAppByIDNotFoundCode int = 404

/*DeployCellAppByIDNotFound Cell not found

swagger:response deployCellAppByIdNotFound
*/
type DeployCellAppByIDNotFound struct {
}

// NewDeployCellAppByIDNotFound creates DeployCellAppByIDNotFound with default headers values
func NewDeployCellAppByIDNotFound() *DeployCellAppByIDNotFound {
	return &DeployCellAppByIDNotFound{}
}

// WriteResponse to the client
func (o *DeployCellAppByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// DeployCellAppByIDMethodNotAllowedCode is the HTTP code returned for type DeployCellAppByIDMethodNotAllowed
const DeployCellAppByIDMethodNotAllowedCode int = 405

/*DeployCellAppByIDMethodNotAllowed Invalid input

swagger:response deployCellAppByIdMethodNotAllowed
*/
type DeployCellAppByIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewDeployCellAppByIDMethodNotAllowed creates DeployCellAppByIDMethodNotAllowed with default headers values
func NewDeployCellAppByIDMethodNotAllowed() *DeployCellAppByIDMethodNotAllowed {
	return &DeployCellAppByIDMethodNotAllowed{}
}

// WithPayload adds the payload to the deploy cell app by Id method not allowed response
func (o *DeployCellAppByIDMethodNotAllowed) WithPayload(payload models.APIResponse) *DeployCellAppByIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deploy cell app by Id method not allowed response
func (o *DeployCellAppByIDMethodNotAllowed) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeployCellAppByIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// DeployCellAppByIDInternalServerErrorCode is the HTTP code returned for type DeployCellAppByIDInternalServerError
const DeployCellAppByIDInternalServerErrorCode int = 500

/*DeployCellAppByIDInternalServerError Internal error

swagger:response deployCellAppByIdInternalServerError
*/
type DeployCellAppByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewDeployCellAppByIDInternalServerError creates DeployCellAppByIDInternalServerError with default headers values
func NewDeployCellAppByIDInternalServerError() *DeployCellAppByIDInternalServerError {
	return &DeployCellAppByIDInternalServerError{}
}

// WithPayload adds the payload to the deploy cell app by Id internal server error response
func (o *DeployCellAppByIDInternalServerError) WithPayload(payload models.APIResponse) *DeployCellAppByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the deploy cell app by Id internal server error response
func (o *DeployCellAppByIDInternalServerError) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeployCellAppByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

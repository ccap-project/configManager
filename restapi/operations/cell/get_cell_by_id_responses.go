// Code generated by go-swagger; DO NOT EDIT.

package cell

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// GetCellByIDOKCode is the HTTP code returned for type GetCellByIDOK
const GetCellByIDOKCode int = 200

/*GetCellByIDOK successful operation

swagger:response getCellByIdOK
*/
type GetCellByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Cell `json:"body,omitempty"`
}

// NewGetCellByIDOK creates GetCellByIDOK with default headers values
func NewGetCellByIDOK() *GetCellByIDOK {
	return &GetCellByIDOK{}
}

// WithPayload adds the payload to the get cell by Id o k response
func (o *GetCellByIDOK) WithPayload(payload *models.Cell) *GetCellByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cell by Id o k response
func (o *GetCellByIDOK) SetPayload(payload *models.Cell) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCellByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCellByIDNotFoundCode is the HTTP code returned for type GetCellByIDNotFound
const GetCellByIDNotFoundCode int = 404

/*GetCellByIDNotFound Cell not found

swagger:response getCellByIdNotFound
*/
type GetCellByIDNotFound struct {
}

// NewGetCellByIDNotFound creates GetCellByIDNotFound with default headers values
func NewGetCellByIDNotFound() *GetCellByIDNotFound {
	return &GetCellByIDNotFound{}
}

// WriteResponse to the client
func (o *GetCellByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetCellByIDMethodNotAllowedCode is the HTTP code returned for type GetCellByIDMethodNotAllowed
const GetCellByIDMethodNotAllowedCode int = 405

/*GetCellByIDMethodNotAllowed Invalid input

swagger:response getCellByIdMethodNotAllowed
*/
type GetCellByIDMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewGetCellByIDMethodNotAllowed creates GetCellByIDMethodNotAllowed with default headers values
func NewGetCellByIDMethodNotAllowed() *GetCellByIDMethodNotAllowed {
	return &GetCellByIDMethodNotAllowed{}
}

// WithPayload adds the payload to the get cell by Id method not allowed response
func (o *GetCellByIDMethodNotAllowed) WithPayload(payload models.APIResponse) *GetCellByIDMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cell by Id method not allowed response
func (o *GetCellByIDMethodNotAllowed) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCellByIDMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetCellByIDInternalServerErrorCode is the HTTP code returned for type GetCellByIDInternalServerError
const GetCellByIDInternalServerErrorCode int = 500

/*GetCellByIDInternalServerError Internal error

swagger:response getCellByIdInternalServerError
*/
type GetCellByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewGetCellByIDInternalServerError creates GetCellByIDInternalServerError with default headers values
func NewGetCellByIDInternalServerError() *GetCellByIDInternalServerError {
	return &GetCellByIDInternalServerError{}
}

// WithPayload adds the payload to the get cell by Id internal server error response
func (o *GetCellByIDInternalServerError) WithPayload(payload models.APIResponse) *GetCellByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get cell by Id internal server error response
func (o *GetCellByIDInternalServerError) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCellByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

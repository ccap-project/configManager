// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2016, 2017, 2018 Alexandre Biancalana <ale@biancalanas.net>.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the <organization> nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

package providertype

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// GetProviderTypeByIDOKCode is the HTTP code returned for type GetProviderTypeByIDOK
const GetProviderTypeByIDOKCode int = 200

/*GetProviderTypeByIDOK successful operation

swagger:response getProviderTypeByIdOK
*/
type GetProviderTypeByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ProviderType `json:"body,omitempty"`
}

// NewGetProviderTypeByIDOK creates GetProviderTypeByIDOK with default headers values
func NewGetProviderTypeByIDOK() *GetProviderTypeByIDOK {
	return &GetProviderTypeByIDOK{}
}

// WithPayload adds the payload to the get provider type by Id o k response
func (o *GetProviderTypeByIDOK) WithPayload(payload *models.ProviderType) *GetProviderTypeByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get provider type by Id o k response
func (o *GetProviderTypeByIDOK) SetPayload(payload *models.ProviderType) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProviderTypeByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetProviderTypeByIDBadRequestCode is the HTTP code returned for type GetProviderTypeByIDBadRequest
const GetProviderTypeByIDBadRequestCode int = 400

/*GetProviderTypeByIDBadRequest Invalid ID supplied

swagger:response getProviderTypeByIdBadRequest
*/
type GetProviderTypeByIDBadRequest struct {
}

// NewGetProviderTypeByIDBadRequest creates GetProviderTypeByIDBadRequest with default headers values
func NewGetProviderTypeByIDBadRequest() *GetProviderTypeByIDBadRequest {
	return &GetProviderTypeByIDBadRequest{}
}

// WriteResponse to the client
func (o *GetProviderTypeByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// GetProviderTypeByIDNotFoundCode is the HTTP code returned for type GetProviderTypeByIDNotFound
const GetProviderTypeByIDNotFoundCode int = 404

/*GetProviderTypeByIDNotFound Provider not found

swagger:response getProviderTypeByIdNotFound
*/
type GetProviderTypeByIDNotFound struct {
}

// NewGetProviderTypeByIDNotFound creates GetProviderTypeByIDNotFound with default headers values
func NewGetProviderTypeByIDNotFound() *GetProviderTypeByIDNotFound {
	return &GetProviderTypeByIDNotFound{}
}

// WriteResponse to the client
func (o *GetProviderTypeByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// GetProviderTypeByIDInternalServerErrorCode is the HTTP code returned for type GetProviderTypeByIDInternalServerError
const GetProviderTypeByIDInternalServerErrorCode int = 500

/*GetProviderTypeByIDInternalServerError Internal error

swagger:response getProviderTypeByIdInternalServerError
*/
type GetProviderTypeByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewGetProviderTypeByIDInternalServerError creates GetProviderTypeByIDInternalServerError with default headers values
func NewGetProviderTypeByIDInternalServerError() *GetProviderTypeByIDInternalServerError {
	return &GetProviderTypeByIDInternalServerError{}
}

// WithPayload adds the payload to the get provider type by Id internal server error response
func (o *GetProviderTypeByIDInternalServerError) WithPayload(payload models.APIResponse) *GetProviderTypeByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get provider type by Id internal server error response
func (o *GetProviderTypeByIDInternalServerError) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProviderTypeByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2016, 2017, 2018 Alexandre Biancalana <ale@biancalanas.net>.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the <organization> nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

package loadbalancer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// AddCellLoadbalancerRelationshipOKCode is the HTTP code returned for type AddCellLoadbalancerRelationshipOK
const AddCellLoadbalancerRelationshipOKCode int = 200

/*AddCellLoadbalancerRelationshipOK successful operation

swagger:response addCellLoadbalancerRelationshipOK
*/
type AddCellLoadbalancerRelationshipOK struct {
}

// NewAddCellLoadbalancerRelationshipOK creates AddCellLoadbalancerRelationshipOK with default headers values
func NewAddCellLoadbalancerRelationshipOK() *AddCellLoadbalancerRelationshipOK {
	return &AddCellLoadbalancerRelationshipOK{}
}

// WriteResponse to the client
func (o *AddCellLoadbalancerRelationshipOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AddCellLoadbalancerRelationshipNotFoundCode is the HTTP code returned for type AddCellLoadbalancerRelationshipNotFound
const AddCellLoadbalancerRelationshipNotFoundCode int = 404

/*AddCellLoadbalancerRelationshipNotFound loadbalancer or component not found

swagger:response addCellLoadbalancerRelationshipNotFound
*/
type AddCellLoadbalancerRelationshipNotFound struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewAddCellLoadbalancerRelationshipNotFound creates AddCellLoadbalancerRelationshipNotFound with default headers values
func NewAddCellLoadbalancerRelationshipNotFound() *AddCellLoadbalancerRelationshipNotFound {
	return &AddCellLoadbalancerRelationshipNotFound{}
}

// WithPayload adds the payload to the add cell loadbalancer relationship not found response
func (o *AddCellLoadbalancerRelationshipNotFound) WithPayload(payload models.APIResponse) *AddCellLoadbalancerRelationshipNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add cell loadbalancer relationship not found response
func (o *AddCellLoadbalancerRelationshipNotFound) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddCellLoadbalancerRelationshipNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// AddCellLoadbalancerRelationshipInternalServerErrorCode is the HTTP code returned for type AddCellLoadbalancerRelationshipInternalServerError
const AddCellLoadbalancerRelationshipInternalServerErrorCode int = 500

/*AddCellLoadbalancerRelationshipInternalServerError Internal error

swagger:response addCellLoadbalancerRelationshipInternalServerError
*/
type AddCellLoadbalancerRelationshipInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewAddCellLoadbalancerRelationshipInternalServerError creates AddCellLoadbalancerRelationshipInternalServerError with default headers values
func NewAddCellLoadbalancerRelationshipInternalServerError() *AddCellLoadbalancerRelationshipInternalServerError {
	return &AddCellLoadbalancerRelationshipInternalServerError{}
}

// WithPayload adds the payload to the add cell loadbalancer relationship internal server error response
func (o *AddCellLoadbalancerRelationshipInternalServerError) WithPayload(payload models.APIResponse) *AddCellLoadbalancerRelationshipInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add cell loadbalancer relationship internal server error response
func (o *AddCellLoadbalancerRelationshipInternalServerError) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddCellLoadbalancerRelationshipInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// Code generated by go-swagger; DO NOT EDIT.

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// DeleteComponentRoleOKCode is the HTTP code returned for type DeleteComponentRoleOK
const DeleteComponentRoleOKCode int = 200

/*DeleteComponentRoleOK successful operation

swagger:response deleteComponentRoleOK
*/
type DeleteComponentRoleOK struct {
}

// NewDeleteComponentRoleOK creates DeleteComponentRoleOK with default headers values
func NewDeleteComponentRoleOK() *DeleteComponentRoleOK {
	return &DeleteComponentRoleOK{}
}

// WriteResponse to the client
func (o *DeleteComponentRoleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// DeleteComponentRoleBadRequestCode is the HTTP code returned for type DeleteComponentRoleBadRequest
const DeleteComponentRoleBadRequestCode int = 400

/*DeleteComponentRoleBadRequest Invalid cell id or role id

swagger:response deleteComponentRoleBadRequest
*/
type DeleteComponentRoleBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewDeleteComponentRoleBadRequest creates DeleteComponentRoleBadRequest with default headers values
func NewDeleteComponentRoleBadRequest() *DeleteComponentRoleBadRequest {
	return &DeleteComponentRoleBadRequest{}
}

// WithPayload adds the payload to the delete component role bad request response
func (o *DeleteComponentRoleBadRequest) WithPayload(payload models.APIResponse) *DeleteComponentRoleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete component role bad request response
func (o *DeleteComponentRoleBadRequest) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteComponentRoleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// DeleteComponentRoleNotFoundCode is the HTTP code returned for type DeleteComponentRoleNotFound
const DeleteComponentRoleNotFoundCode int = 404

/*DeleteComponentRoleNotFound Role does not exists

swagger:response deleteComponentRoleNotFound
*/
type DeleteComponentRoleNotFound struct {
}

// NewDeleteComponentRoleNotFound creates DeleteComponentRoleNotFound with default headers values
func NewDeleteComponentRoleNotFound() *DeleteComponentRoleNotFound {
	return &DeleteComponentRoleNotFound{}
}

// WriteResponse to the client
func (o *DeleteComponentRoleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// DeleteComponentRoleInternalServerErrorCode is the HTTP code returned for type DeleteComponentRoleInternalServerError
const DeleteComponentRoleInternalServerErrorCode int = 500

/*DeleteComponentRoleInternalServerError Internal error

swagger:response deleteComponentRoleInternalServerError
*/
type DeleteComponentRoleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewDeleteComponentRoleInternalServerError creates DeleteComponentRoleInternalServerError with default headers values
func NewDeleteComponentRoleInternalServerError() *DeleteComponentRoleInternalServerError {
	return &DeleteComponentRoleInternalServerError{}
}

// WithPayload adds the payload to the delete component role internal server error response
func (o *DeleteComponentRoleInternalServerError) WithPayload(payload models.APIResponse) *DeleteComponentRoleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete component role internal server error response
func (o *DeleteComponentRoleInternalServerError) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteComponentRoleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

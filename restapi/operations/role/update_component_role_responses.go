// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2016, 2017, 2018 Alexandre Biancalana <ale@biancalanas.net>.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the <organization> nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

package role

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// UpdateComponentRoleOKCode is the HTTP code returned for type UpdateComponentRoleOK
const UpdateComponentRoleOKCode int = 200

/*UpdateComponentRoleOK successful operation

swagger:response updateComponentRoleOK
*/
type UpdateComponentRoleOK struct {
}

// NewUpdateComponentRoleOK creates UpdateComponentRoleOK with default headers values
func NewUpdateComponentRoleOK() *UpdateComponentRoleOK {
	return &UpdateComponentRoleOK{}
}

// WriteResponse to the client
func (o *UpdateComponentRoleOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// UpdateComponentRoleBadRequestCode is the HTTP code returned for type UpdateComponentRoleBadRequest
const UpdateComponentRoleBadRequestCode int = 400

/*UpdateComponentRoleBadRequest Invalid cell id or role id

swagger:response updateComponentRoleBadRequest
*/
type UpdateComponentRoleBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewUpdateComponentRoleBadRequest creates UpdateComponentRoleBadRequest with default headers values
func NewUpdateComponentRoleBadRequest() *UpdateComponentRoleBadRequest {
	return &UpdateComponentRoleBadRequest{}
}

// WithPayload adds the payload to the update component role bad request response
func (o *UpdateComponentRoleBadRequest) WithPayload(payload *models.APIResponse) *UpdateComponentRoleBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update component role bad request response
func (o *UpdateComponentRoleBadRequest) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateComponentRoleBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateComponentRoleNotFoundCode is the HTTP code returned for type UpdateComponentRoleNotFound
const UpdateComponentRoleNotFoundCode int = 404

/*UpdateComponentRoleNotFound Role does not exists

swagger:response updateComponentRoleNotFound
*/
type UpdateComponentRoleNotFound struct {
}

// NewUpdateComponentRoleNotFound creates UpdateComponentRoleNotFound with default headers values
func NewUpdateComponentRoleNotFound() *UpdateComponentRoleNotFound {
	return &UpdateComponentRoleNotFound{}
}

// WriteResponse to the client
func (o *UpdateComponentRoleNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// UpdateComponentRoleConflictCode is the HTTP code returned for type UpdateComponentRoleConflict
const UpdateComponentRoleConflictCode int = 409

/*UpdateComponentRoleConflict Role does not exists

swagger:response updateComponentRoleConflict
*/
type UpdateComponentRoleConflict struct {
}

// NewUpdateComponentRoleConflict creates UpdateComponentRoleConflict with default headers values
func NewUpdateComponentRoleConflict() *UpdateComponentRoleConflict {
	return &UpdateComponentRoleConflict{}
}

// WriteResponse to the client
func (o *UpdateComponentRoleConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}

// UpdateComponentRoleInternalServerErrorCode is the HTTP code returned for type UpdateComponentRoleInternalServerError
const UpdateComponentRoleInternalServerErrorCode int = 500

/*UpdateComponentRoleInternalServerError Internal error

swagger:response updateComponentRoleInternalServerError
*/
type UpdateComponentRoleInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewUpdateComponentRoleInternalServerError creates UpdateComponentRoleInternalServerError with default headers values
func NewUpdateComponentRoleInternalServerError() *UpdateComponentRoleInternalServerError {
	return &UpdateComponentRoleInternalServerError{}
}

// WithPayload adds the payload to the update component role internal server error response
func (o *UpdateComponentRoleInternalServerError) WithPayload(payload *models.APIResponse) *UpdateComponentRoleInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update component role internal server error response
func (o *UpdateComponentRoleInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateComponentRoleInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

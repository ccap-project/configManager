package keypair

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"../../../models"
)

// GetKeypairByIDOKCode is the HTTP code returned for type GetKeypairByIDOK
const GetKeypairByIDOKCode int = 200

/*GetKeypairByIDOK successful operation

swagger:response getKeypairByIdOK
*/
type GetKeypairByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Keypair `json:"body,omitempty"`
}

// NewGetKeypairByIDOK creates GetKeypairByIDOK with default headers values
func NewGetKeypairByIDOK() *GetKeypairByIDOK {
	return &GetKeypairByIDOK{}
}

// WithPayload adds the payload to the get keypair by Id o k response
func (o *GetKeypairByIDOK) WithPayload(payload *models.Keypair) *GetKeypairByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get keypair by Id o k response
func (o *GetKeypairByIDOK) SetPayload(payload *models.Keypair) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKeypairByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetKeypairByIDBadRequestCode is the HTTP code returned for type GetKeypairByIDBadRequest
const GetKeypairByIDBadRequestCode int = 400

/*GetKeypairByIDBadRequest Invalid ID supplied

swagger:response getKeypairByIdBadRequest
*/
type GetKeypairByIDBadRequest struct {
}

// NewGetKeypairByIDBadRequest creates GetKeypairByIDBadRequest with default headers values
func NewGetKeypairByIDBadRequest() *GetKeypairByIDBadRequest {
	return &GetKeypairByIDBadRequest{}
}

// WriteResponse to the client
func (o *GetKeypairByIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
}

// GetKeypairByIDNotFoundCode is the HTTP code returned for type GetKeypairByIDNotFound
const GetKeypairByIDNotFoundCode int = 404

/*GetKeypairByIDNotFound Keypair not found

swagger:response getKeypairByIdNotFound
*/
type GetKeypairByIDNotFound struct {
}

// NewGetKeypairByIDNotFound creates GetKeypairByIDNotFound with default headers values
func NewGetKeypairByIDNotFound() *GetKeypairByIDNotFound {
	return &GetKeypairByIDNotFound{}
}

// WriteResponse to the client
func (o *GetKeypairByIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

// GetKeypairByIDInternalServerErrorCode is the HTTP code returned for type GetKeypairByIDInternalServerError
const GetKeypairByIDInternalServerErrorCode int = 500

/*GetKeypairByIDInternalServerError InternalError

swagger:response getKeypairByIdInternalServerError
*/
type GetKeypairByIDInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewGetKeypairByIDInternalServerError creates GetKeypairByIDInternalServerError with default headers values
func NewGetKeypairByIDInternalServerError() *GetKeypairByIDInternalServerError {
	return &GetKeypairByIDInternalServerError{}
}

// WithPayload adds the payload to the get keypair by Id internal server error response
func (o *GetKeypairByIDInternalServerError) WithPayload(payload models.APIResponse) *GetKeypairByIDInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get keypair by Id internal server error response
func (o *GetKeypairByIDInternalServerError) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetKeypairByIDInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

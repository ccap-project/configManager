// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2016, 2017, 2018 Alexandre Biancalana <ale@biancalanas.net>.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the <organization> nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// DeleteCellNetworkOKCode is the HTTP code returned for type DeleteCellNetworkOK
const DeleteCellNetworkOKCode int = 200

/*DeleteCellNetworkOK successful operation

swagger:response deleteCellNetworkOK
*/
type DeleteCellNetworkOK struct {

	/*
	  In: Body
	*/
	Payload *models.Network `json:"body,omitempty"`
}

// NewDeleteCellNetworkOK creates DeleteCellNetworkOK with default headers values
func NewDeleteCellNetworkOK() *DeleteCellNetworkOK {
	return &DeleteCellNetworkOK{}
}

// WithPayload adds the payload to the delete cell network o k response
func (o *DeleteCellNetworkOK) WithPayload(payload *models.Network) *DeleteCellNetworkOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cell network o k response
func (o *DeleteCellNetworkOK) SetPayload(payload *models.Network) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCellNetworkOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCellNetworkBadRequestCode is the HTTP code returned for type DeleteCellNetworkBadRequest
const DeleteCellNetworkBadRequestCode int = 400

/*DeleteCellNetworkBadRequest Invalid cell id or network id

swagger:response deleteCellNetworkBadRequest
*/
type DeleteCellNetworkBadRequest struct {
}

// NewDeleteCellNetworkBadRequest creates DeleteCellNetworkBadRequest with default headers values
func NewDeleteCellNetworkBadRequest() *DeleteCellNetworkBadRequest {
	return &DeleteCellNetworkBadRequest{}
}

// WriteResponse to the client
func (o *DeleteCellNetworkBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// DeleteCellNetworkNotFoundCode is the HTTP code returned for type DeleteCellNetworkNotFound
const DeleteCellNetworkNotFoundCode int = 404

/*DeleteCellNetworkNotFound network not found

swagger:response deleteCellNetworkNotFound
*/
type DeleteCellNetworkNotFound struct {
}

// NewDeleteCellNetworkNotFound creates DeleteCellNetworkNotFound with default headers values
func NewDeleteCellNetworkNotFound() *DeleteCellNetworkNotFound {
	return &DeleteCellNetworkNotFound{}
}

// WriteResponse to the client
func (o *DeleteCellNetworkNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// DeleteCellNetworkInternalServerErrorCode is the HTTP code returned for type DeleteCellNetworkInternalServerError
const DeleteCellNetworkInternalServerErrorCode int = 500

/*DeleteCellNetworkInternalServerError Internal error

swagger:response deleteCellNetworkInternalServerError
*/
type DeleteCellNetworkInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteCellNetworkInternalServerError creates DeleteCellNetworkInternalServerError with default headers values
func NewDeleteCellNetworkInternalServerError() *DeleteCellNetworkInternalServerError {
	return &DeleteCellNetworkInternalServerError{}
}

// WithPayload adds the payload to the delete cell network internal server error response
func (o *DeleteCellNetworkInternalServerError) WithPayload(payload *models.APIResponse) *DeleteCellNetworkInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete cell network internal server error response
func (o *DeleteCellNetworkInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCellNetworkInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

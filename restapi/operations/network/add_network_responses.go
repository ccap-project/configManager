// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2016, 2017, 2018 Alexandre Biancalana <ale@biancalanas.net>.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the <organization> nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// AddNetworkCreatedCode is the HTTP code returned for type AddNetworkCreated
const AddNetworkCreatedCode int = 201

/*AddNetworkCreated Created

swagger:response addNetworkCreated
*/
type AddNetworkCreated struct {

	/*
	  In: Body
	*/
	Payload models.ULID `json:"body,omitempty"`
}

// NewAddNetworkCreated creates AddNetworkCreated with default headers values
func NewAddNetworkCreated() *AddNetworkCreated {
	return &AddNetworkCreated{}
}

// WithPayload adds the payload to the add network created response
func (o *AddNetworkCreated) WithPayload(payload models.ULID) *AddNetworkCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add network created response
func (o *AddNetworkCreated) SetPayload(payload models.ULID) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNetworkCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// AddNetworkMethodNotAllowedCode is the HTTP code returned for type AddNetworkMethodNotAllowed
const AddNetworkMethodNotAllowedCode int = 405

/*AddNetworkMethodNotAllowed Invalid input

swagger:response addNetworkMethodNotAllowed
*/
type AddNetworkMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddNetworkMethodNotAllowed creates AddNetworkMethodNotAllowed with default headers values
func NewAddNetworkMethodNotAllowed() *AddNetworkMethodNotAllowed {
	return &AddNetworkMethodNotAllowed{}
}

// WithPayload adds the payload to the add network method not allowed response
func (o *AddNetworkMethodNotAllowed) WithPayload(payload *models.APIResponse) *AddNetworkMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add network method not allowed response
func (o *AddNetworkMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNetworkMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddNetworkConflictCode is the HTTP code returned for type AddNetworkConflict
const AddNetworkConflictCode int = 409

/*AddNetworkConflict Already exists

swagger:response addNetworkConflict
*/
type AddNetworkConflict struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddNetworkConflict creates AddNetworkConflict with default headers values
func NewAddNetworkConflict() *AddNetworkConflict {
	return &AddNetworkConflict{}
}

// WithPayload adds the payload to the add network conflict response
func (o *AddNetworkConflict) WithPayload(payload *models.APIResponse) *AddNetworkConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add network conflict response
func (o *AddNetworkConflict) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNetworkConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddNetworkInternalServerErrorCode is the HTTP code returned for type AddNetworkInternalServerError
const AddNetworkInternalServerErrorCode int = 500

/*AddNetworkInternalServerError Internal error

swagger:response addNetworkInternalServerError
*/
type AddNetworkInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddNetworkInternalServerError creates AddNetworkInternalServerError with default headers values
func NewAddNetworkInternalServerError() *AddNetworkInternalServerError {
	return &AddNetworkInternalServerError{}
}

// WithPayload adds the payload to the add network internal server error response
func (o *AddNetworkInternalServerError) WithPayload(payload *models.APIResponse) *AddNetworkInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add network internal server error response
func (o *AddNetworkInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddNetworkInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2016, 2017, 2018 Alexandre Biancalana <ale@biancalanas.net>.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the <organization> nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// FindCellNetworksOKCode is the HTTP code returned for type FindCellNetworksOK
const FindCellNetworksOKCode int = 200

/*FindCellNetworksOK successful operation

swagger:response findCellNetworksOK
*/
type FindCellNetworksOK struct {

	/*
	  In: Body
	*/
	Payload models.FindCellNetworksOKBody `json:"body,omitempty"`
}

// NewFindCellNetworksOK creates FindCellNetworksOK with default headers values
func NewFindCellNetworksOK() *FindCellNetworksOK {
	return &FindCellNetworksOK{}
}

// WithPayload adds the payload to the find cell networks o k response
func (o *FindCellNetworksOK) WithPayload(payload models.FindCellNetworksOKBody) *FindCellNetworksOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find cell networks o k response
func (o *FindCellNetworksOK) SetPayload(payload models.FindCellNetworksOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindCellNetworksOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.FindCellNetworksOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// FindCellNetworksBadRequestCode is the HTTP code returned for type FindCellNetworksBadRequest
const FindCellNetworksBadRequestCode int = 400

/*FindCellNetworksBadRequest Invalid cell id

swagger:response findCellNetworksBadRequest
*/
type FindCellNetworksBadRequest struct {
}

// NewFindCellNetworksBadRequest creates FindCellNetworksBadRequest with default headers values
func NewFindCellNetworksBadRequest() *FindCellNetworksBadRequest {
	return &FindCellNetworksBadRequest{}
}

// WriteResponse to the client
func (o *FindCellNetworksBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// FindCellNetworksNotFoundCode is the HTTP code returned for type FindCellNetworksNotFound
const FindCellNetworksNotFoundCode int = 404

/*FindCellNetworksNotFound network not found

swagger:response findCellNetworksNotFound
*/
type FindCellNetworksNotFound struct {
}

// NewFindCellNetworksNotFound creates FindCellNetworksNotFound with default headers values
func NewFindCellNetworksNotFound() *FindCellNetworksNotFound {
	return &FindCellNetworksNotFound{}
}

// WriteResponse to the client
func (o *FindCellNetworksNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// FindCellNetworksInternalServerErrorCode is the HTTP code returned for type FindCellNetworksInternalServerError
const FindCellNetworksInternalServerErrorCode int = 500

/*FindCellNetworksInternalServerError Internal error

swagger:response findCellNetworksInternalServerError
*/
type FindCellNetworksInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewFindCellNetworksInternalServerError creates FindCellNetworksInternalServerError with default headers values
func NewFindCellNetworksInternalServerError() *FindCellNetworksInternalServerError {
	return &FindCellNetworksInternalServerError{}
}

// WithPayload adds the payload to the find cell networks internal server error response
func (o *FindCellNetworksInternalServerError) WithPayload(payload *models.APIResponse) *FindCellNetworksInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find cell networks internal server error response
func (o *FindCellNetworksInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindCellNetworksInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

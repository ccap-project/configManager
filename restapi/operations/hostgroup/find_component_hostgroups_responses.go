package hostgroup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"../../../models"
)

// FindComponentHostgroupsOKCode is the HTTP code returned for type FindComponentHostgroupsOK
const FindComponentHostgroupsOKCode int = 200

/*FindComponentHostgroupsOK successful operation

swagger:response findComponentHostgroupsOK
*/
type FindComponentHostgroupsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Hostgroup `json:"body,omitempty"`
}

// NewFindComponentHostgroupsOK creates FindComponentHostgroupsOK with default headers values
func NewFindComponentHostgroupsOK() *FindComponentHostgroupsOK {
	return &FindComponentHostgroupsOK{}
}

// WithPayload adds the payload to the find component hostgroups o k response
func (o *FindComponentHostgroupsOK) WithPayload(payload []*models.Hostgroup) *FindComponentHostgroupsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find component hostgroups o k response
func (o *FindComponentHostgroupsOK) SetPayload(payload []*models.Hostgroup) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindComponentHostgroupsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Hostgroup, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// FindComponentHostgroupsBadRequestCode is the HTTP code returned for type FindComponentHostgroupsBadRequest
const FindComponentHostgroupsBadRequestCode int = 400

/*FindComponentHostgroupsBadRequest Invalid cell id or component id

swagger:response findComponentHostgroupsBadRequest
*/
type FindComponentHostgroupsBadRequest struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewFindComponentHostgroupsBadRequest creates FindComponentHostgroupsBadRequest with default headers values
func NewFindComponentHostgroupsBadRequest() *FindComponentHostgroupsBadRequest {
	return &FindComponentHostgroupsBadRequest{}
}

// WithPayload adds the payload to the find component hostgroups bad request response
func (o *FindComponentHostgroupsBadRequest) WithPayload(payload models.APIResponse) *FindComponentHostgroupsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find component hostgroups bad request response
func (o *FindComponentHostgroupsBadRequest) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindComponentHostgroupsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// FindComponentHostgroupsInternalServerErrorCode is the HTTP code returned for type FindComponentHostgroupsInternalServerError
const FindComponentHostgroupsInternalServerErrorCode int = 500

/*FindComponentHostgroupsInternalServerError Internal error

swagger:response findComponentHostgroupsInternalServerError
*/
type FindComponentHostgroupsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload models.APIResponse `json:"body,omitempty"`
}

// NewFindComponentHostgroupsInternalServerError creates FindComponentHostgroupsInternalServerError with default headers values
func NewFindComponentHostgroupsInternalServerError() *FindComponentHostgroupsInternalServerError {
	return &FindComponentHostgroupsInternalServerError{}
}

// WithPayload adds the payload to the find component hostgroups internal server error response
func (o *FindComponentHostgroupsInternalServerError) WithPayload(payload models.APIResponse) *FindComponentHostgroupsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find component hostgroups internal server error response
func (o *FindComponentHostgroupsInternalServerError) SetPayload(payload models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindComponentHostgroupsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

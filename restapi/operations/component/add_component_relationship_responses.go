// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2016, 2017, 2018 Alexandre Biancalana <ale@biancalanas.net>.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the <organization> nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// AddComponentRelationshipCreatedCode is the HTTP code returned for type AddComponentRelationshipCreated
const AddComponentRelationshipCreatedCode int = 201

/*AddComponentRelationshipCreated Created

swagger:response addComponentRelationshipCreated
*/
type AddComponentRelationshipCreated struct {
}

// NewAddComponentRelationshipCreated creates AddComponentRelationshipCreated with default headers values
func NewAddComponentRelationshipCreated() *AddComponentRelationshipCreated {
	return &AddComponentRelationshipCreated{}
}

// WriteResponse to the client
func (o *AddComponentRelationshipCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// AddComponentRelationshipNotFoundCode is the HTTP code returned for type AddComponentRelationshipNotFound
const AddComponentRelationshipNotFoundCode int = 404

/*AddComponentRelationshipNotFound Invalid input

swagger:response addComponentRelationshipNotFound
*/
type AddComponentRelationshipNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddComponentRelationshipNotFound creates AddComponentRelationshipNotFound with default headers values
func NewAddComponentRelationshipNotFound() *AddComponentRelationshipNotFound {
	return &AddComponentRelationshipNotFound{}
}

// WithPayload adds the payload to the add component relationship not found response
func (o *AddComponentRelationshipNotFound) WithPayload(payload *models.APIResponse) *AddComponentRelationshipNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add component relationship not found response
func (o *AddComponentRelationshipNotFound) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddComponentRelationshipNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddComponentRelationshipConflictCode is the HTTP code returned for type AddComponentRelationshipConflict
const AddComponentRelationshipConflictCode int = 409

/*AddComponentRelationshipConflict Already exists

swagger:response addComponentRelationshipConflict
*/
type AddComponentRelationshipConflict struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddComponentRelationshipConflict creates AddComponentRelationshipConflict with default headers values
func NewAddComponentRelationshipConflict() *AddComponentRelationshipConflict {
	return &AddComponentRelationshipConflict{}
}

// WithPayload adds the payload to the add component relationship conflict response
func (o *AddComponentRelationshipConflict) WithPayload(payload *models.APIResponse) *AddComponentRelationshipConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add component relationship conflict response
func (o *AddComponentRelationshipConflict) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddComponentRelationshipConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddComponentRelationshipInternalServerErrorCode is the HTTP code returned for type AddComponentRelationshipInternalServerError
const AddComponentRelationshipInternalServerErrorCode int = 500

/*AddComponentRelationshipInternalServerError Internal error

swagger:response addComponentRelationshipInternalServerError
*/
type AddComponentRelationshipInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddComponentRelationshipInternalServerError creates AddComponentRelationshipInternalServerError with default headers values
func NewAddComponentRelationshipInternalServerError() *AddComponentRelationshipInternalServerError {
	return &AddComponentRelationshipInternalServerError{}
}

// WithPayload adds the payload to the add component relationship internal server error response
func (o *AddComponentRelationshipInternalServerError) WithPayload(payload *models.APIResponse) *AddComponentRelationshipInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add component relationship internal server error response
func (o *AddComponentRelationshipInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddComponentRelationshipInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

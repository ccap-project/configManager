// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2016, 2017, 2018 Alexandre Biancalana <ale@biancalanas.net>.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of the <organization> nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

package component

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"configManager/models"
)

// AddComponentCreatedCode is the HTTP code returned for type AddComponentCreated
const AddComponentCreatedCode int = 201

/*AddComponentCreated Created

swagger:response addComponentCreated
*/
type AddComponentCreated struct {

	/*
	  In: Body
	*/
	Payload models.ULID `json:"body,omitempty"`
}

// NewAddComponentCreated creates AddComponentCreated with default headers values
func NewAddComponentCreated() *AddComponentCreated {
	return &AddComponentCreated{}
}

// WithPayload adds the payload to the add component created response
func (o *AddComponentCreated) WithPayload(payload models.ULID) *AddComponentCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add component created response
func (o *AddComponentCreated) SetPayload(payload models.ULID) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddComponentCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// AddComponentMethodNotAllowedCode is the HTTP code returned for type AddComponentMethodNotAllowed
const AddComponentMethodNotAllowedCode int = 405

/*AddComponentMethodNotAllowed Invalid input

swagger:response addComponentMethodNotAllowed
*/
type AddComponentMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddComponentMethodNotAllowed creates AddComponentMethodNotAllowed with default headers values
func NewAddComponentMethodNotAllowed() *AddComponentMethodNotAllowed {
	return &AddComponentMethodNotAllowed{}
}

// WithPayload adds the payload to the add component method not allowed response
func (o *AddComponentMethodNotAllowed) WithPayload(payload *models.APIResponse) *AddComponentMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add component method not allowed response
func (o *AddComponentMethodNotAllowed) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddComponentMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddComponentConflictCode is the HTTP code returned for type AddComponentConflict
const AddComponentConflictCode int = 409

/*AddComponentConflict Already exists

swagger:response addComponentConflict
*/
type AddComponentConflict struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddComponentConflict creates AddComponentConflict with default headers values
func NewAddComponentConflict() *AddComponentConflict {
	return &AddComponentConflict{}
}

// WithPayload adds the payload to the add component conflict response
func (o *AddComponentConflict) WithPayload(payload *models.APIResponse) *AddComponentConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add component conflict response
func (o *AddComponentConflict) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddComponentConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddComponentInternalServerErrorCode is the HTTP code returned for type AddComponentInternalServerError
const AddComponentInternalServerErrorCode int = 500

/*AddComponentInternalServerError Internal error

swagger:response addComponentInternalServerError
*/
type AddComponentInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewAddComponentInternalServerError creates AddComponentInternalServerError with default headers values
func NewAddComponentInternalServerError() *AddComponentInternalServerError {
	return &AddComponentInternalServerError{}
}

// WithPayload adds the payload to the add component internal server error response
func (o *AddComponentInternalServerError) WithPayload(payload *models.APIResponse) *AddComponentInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add component internal server error response
func (o *AddComponentInternalServerError) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddComponentInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
